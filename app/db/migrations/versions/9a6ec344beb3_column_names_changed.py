"""Column names changed

Revision ID: 9a6ec344beb3
Revises: 01cc8d9c0008
Create Date: 2025-05-05 10:43:21.325584

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9a6ec344beb3'
down_revision: Union[str, None] = '01cc8d9c0008'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('books', sa.Column('book_id', sa.Integer(), autoincrement=True, nullable=False))
    op.add_column('books', sa.Column('book_name', sa.String(), nullable=False))
    op.add_column('books', sa.Column('book_author', sa.String(), nullable=False))
    op.add_column('books', sa.Column('book_description', sa.String(), nullable=False))
    op.drop_constraint('books_name_key', 'books', type_='unique')
    op.create_unique_constraint(None, 'books', ['book_name'])
    op.drop_column('books', 'id')
    op.drop_column('books', 'name')
    op.drop_column('books', 'author')
    op.drop_column('books', 'description')
    op.add_column('users', sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False))
    op.drop_column('users', 'id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_column('users', 'user_id')
    op.add_column('books', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('books', sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('books', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('books', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'books', type_='unique')
    op.create_unique_constraint('books_name_key', 'books', ['name'])
    op.drop_column('books', 'book_description')
    op.drop_column('books', 'book_author')
    op.drop_column('books', 'book_name')
    op.drop_column('books', 'book_id')
    # ### end Alembic commands ###
